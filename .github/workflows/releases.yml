name: Build & deploy release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set pom version to release
        id: pom
        run: |
          mvn -B versions:set -DremoveSnapshot
          VERSION=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          JAR=DiscordSRV-Build-$VERSION.jar
          echo "::set-env name=VERSION::$VERSION"
          echo "::set-output name=version::$VERSION"
          echo "::set-env name=JAR::$JAR"
          echo "::set-output name=jar::$JAR"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub"
          git commit -m "Release $VERSION" -a
      - name: Build & deploy to Nexus
        env:
          NEXUS_USER: ci
          NEXUS_PASS: ${{ secrets.NEXUS_CI }}
        run: mvn -B --settings deploy.xml deploy
      - name: Push to master
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Draft release
        id: draft_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.pom.outputs.version }}
          release_name: Build ${{ steps.pom.outputs.version }}
          draft: true
          prerelease: false
      - name: Upload release assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.draft_release.outputs.upload_url }}
          asset_path: ./target/${{ steps.pom.outputs.jar }}
          asset_name: ${{ steps.pom.outputs.jar }}
          asset_content_type: application/java-archive
