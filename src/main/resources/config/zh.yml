# DiscordSRV配置
# 需要帮忙？ 加入我们的Discord，https://discordsrv.com/discord

# 此項勿動
ConfigVersion: ${project.version}

# Bot token; 若不知道這是什麼，請看plugin頁面上的影片
BotToken: "BOTTOKEN"

# 从游戏到不和谐的频道链接
# 语法为 Channels: {"来自Minecraft的游戏中频道名称": "来自Discord的数字频道ID", "来自Minecraft的另一个游戏中频道名称": "来自Discord的另一个数字频道ID”}
#
# DiscordSRV的所有消息将转到第一个通道，除非为该消息定义了一个通道：
# 使用兼容的聊天插件之一时，频道名称将来自该插件（用于聊天消息）
#  - 如果您使用的是TownyChat，则默认频道通常称为"general"而不是"global"
# 用于播放器聊天消息（不使用聊天插件时）: global
# 用于服务器启动/停止消息: status
# 成就/进阶讯息编号: awards
# 死亡消息: deaths
# 加入消息: join
# 留言留言: leave
# 用于dynmap消息: dynmap
# 用于看门狗消息: watchdog
# 用于/discord broadcast: broadcasts（除非在命令中指定）
#
# "频道对的第一部分不是Discord频道名称！
Channels: {"global": "000000000000000000"}

# 控制台頻道ID,留白表示不使用
DiscordConsoleChannelId: "000000000000000000"

# 使用 /discord 时显示给玩家的邀请链接，以及执行链接时显示给未链接的玩家的消息
DiscordInviteLink: "https://discord.gg/changethisintheconfig.yml"

# Debug 選項, 若無必要毋須變更
#
# DebugLevel: 0 = no debug, 1 = debug, 2 = debug with stack traces
#
DebugLevel: 0
DebugJDA: false
DebugJDARestActions: false
CancelConsoleCommandIfLoggingFailed: true
ForcedLanguage: none
AvatarUrl: https://mc-heads.net/avatar/{texture}/{size}.png
Experiment_JdbcAccountLinkBackend: "jdbc:mysql://HOST:PORT/DATABASE?autoReconnect=true&useSSL=false"
Experiment_JdbcTablePrefix: "discordsrv"
Experiment_JdbcUsername: "username"
Experiment_JdbcPassword: "password"
Experiment_WebhookChatMessageDelivery: false
Experiment_WebhookChatMessageUsernameFormat: "%displayname%"
Experiment_WebhookChatMessageFormat: "%message%"
Experiment_WebhookChatMessageUsernameFromDiscord: false
Experiment_WebhookChatMessageAvatarFromDiscord: false
Experiment_MCDiscordReserializer_ToDiscord: false
Experiment_MCDiscordReserializer_ToMinecraft: false
Experiment_MCDiscordReserializer_InBroadcast: false
PrintGuildsAndChannels: true
ForceTLSv12: true
NoopHostnameVerifier: false
MaximumAttemptsForSystemDNSBeforeUsingFallbackDNS: 3
TimestampFormat: EEE, d. MMM yyyy HH:mm:ss z
DateFormat: yyyy-MM-dd
# https://github.com/DiscordSRV/DiscordSRV/wiki/config#Timezone
Timezone: default

# 插件挂钩(plugin hooking)
#
# DisabledPluginHooks: 不会使用的插件挂钩（通常只是插件的名称）
# VentureChatBungee: 启用了VentureChat挂钩的BungeeCord功能（从每台服务器接收消息，至少需要1位玩家在线）
# EnablePresenceInformation: enabled presence information, which is required for some of our PlaceholderAPI placeholders. Keep in mind this requires the "Presence Intent" from the Discord developer portal
# UseModernPaperChatEvent: only use this if you have a chat plugins that SPECIFICALLY utilizes Paper's "AsyncChatEvent"
DisabledPluginHooks: []
VentureChatBungee: false
EnablePresenceInformation: false
UseModernPaperChatEvent: false

# Game Information
# Sets the "Playing: ______" indicator for the bot.
# Can be a single, static value, or cycle through multiple different options
# You can preface the status with "playing", "watching", or "listening to" to set the activity type
# PlaceholderAPI placeholders are supported
#
# DiscordGameStatus: Text to display. Can be a single value e.g. "Minecraft", or multiple values e.g. ["Minecraft", "yourip.changeme.com"]
# StatusUpdateRateInMinutes: How frequently to cycle the status
DiscordGameStatus: "Minecraft"
StatusUpdateRateInMinutes: 2

# 聊天頻道資訊
# 此文字頻道用來將遊戲中訊息送至Discord頻道，並接收來自Discord頻道的訊息
#
# DiscordChatChannelDiscordToMinecraft: 是否設定將Discrod頻道訊息送至遊戲中
# DiscordChatChannelMinecraftToDiscord: 是否將遊戲內訊息送至Discord
# DiscordChatChannelTruncateLength: 由Discord頻道送至遊戲內的訊息最大字元長度限制
# DiscordChatChannelTranslateMentions: 是否將遊戲內的@轉換為Discord標記
# DiscordChatChannelAllowedMentions: 从Minecraft发送给Discord的消息中允许的@Ping类型； 默认值中缺少的类型是“角色”，“这里”和“所有人”
# DiscordChatChannelEmojiBehavior: emojis应该如何发送到Minecraft。可以是 "show"、"name "或 "hide"
# DiscordChatChannelEmoteBehavior: emotes应该如何发送到Minecraft。可以是 "name "或 "hide"
# DiscordChatChannelPrefixRequiredToProcessMessage: 將遊戲內訊息發送至Discord頻道的是否要求加上前綴 (例如: "!",留白表示不用)
# DiscordChatChannelRolesAllowedToUseColorCodesInChat: 允許在遊戲內傳送至Discord頻道的訊息中使用顏色或格式代碼的身分組
# DiscordChatChannelBroadcastDiscordMessagesToConsole: 是否在控制台中顯示Discord訊息
# DiscordChatChannelRequireLinkedAccount: 是否要求玩家須連結至Discord帳戶才能使用此功能
# DiscordChatChannelBlockBots: 是否封鎖來自Discord的Bot -> MC chat
# DiscordChatChannelBlockedIds: 此處設定的Discord使用者(或bot)的ID所發送之訊息將不被處理
# DiscordChatChannelRolesSelectionAsWhitelist: 將後項名單中的用戶組視為白名單(true)或黑名單(false)
# DiscordChatChannelRolesSelection: 此項設定的用戶組將依前項設定之規則處理
# DiscordChatChannelRoleAliases: 角色别名列表（在Minecraft消息中使用的角色的备用名称）
#
DiscordChatChannelDiscordToMinecraft: true
DiscordChatChannelMinecraftToDiscord: true
DiscordChatChannelTruncateLength: 256
DiscordChatChannelTranslateMentions: true
DiscordChatChannelAllowedMentions: [user, channel, emote]
DiscordChatChannelEmojiBehavior: "name"
DiscordChatChannelEmoteBehavior: "name"
DiscordChatChannelPrefixRequiredToProcessMessage: ""
DiscordChatChannelRolesAllowedToUseColorCodesInChat: ["Developer", "Owner", "Admin", "Moderator"]
DiscordChatChannelBroadcastDiscordMessagesToConsole: true
DiscordChatChannelRequireLinkedAccount: false
DiscordChatChannelBlockBots: false
DiscordChatChannelBlockedIds: ["000000000000000000", "000000000000000000", "000000000000000000"]
DiscordChatChannelRolesSelectionAsWhitelist: false
DiscordChatChannelRolesSelection: ["Don't show me!", "Misc role"]
DiscordChatChannelRoleAliases: {"Developer": "Dev"}

# 控制台頻道資訊
# 此文字頻道所接收的訊息等同於控制台指令
# 並會逐行顯示顯示來自控制台的訊息
#
# 可以在 messages.yml 中自訂訊息格式
#
# DiscordConsoleChannelLogRefreshRateInSeconds: 控制台更新訊息至頻道的間隔(秒）
# DiscordConsoleChannelUsageLog:
#    %date%:  当前的日期
#              例: 2017-01-01
#    支持PlaceholderAPI占位符
# DiscordConsoleChannelBlacklistActsAsWhitelist: 是否將後項的黑名單轉為白名單
# DiscordConsoleChannelBlacklistedCommands: 限制不能在控制台頻道執行的指令
# DiscordConsoleChannelFilters: 正则表达式过滤器将应用于发送到Discord的控制台行，如果结果为空，则根本不会发送消息
# DiscordConsoleChannelLevels: 經由appender送至控制台頻道的層級
# DiscordConsoleChannelAllowPluginUpload: 应该将插件上传到控制台通道，将其自动添加到服务器
#
DiscordConsoleChannelLogRefreshRateInSeconds: 5
DiscordConsoleChannelUsageLog: "Console-%date%.log"
DiscordConsoleChannelBlacklistActsAsWhitelist: false
DiscordConsoleChannelBlacklistedCommands: ["?", "op", "deop", "execute"]
DiscordConsoleChannelFilters: {".*(?i)async chat thread.*": "", ".*There are \\d+ (?:of a max of|out of maximum) \\d+ players online.*": ""}
DiscordConsoleChannelLevels: [info, warn, error]
DiscordConsoleChannelAllowPluginUpload: false

# 聊天頻道執行命令
# 這裡的設定可以讓你在聊天頻道中, 使用前綴如同控制台一般執行指令。  如"!c kick Notch"
#
# DiscordChatChannelConsoleCommandEnabled: 是否在聊天頻道中啟用控制台指令
# DiscordChatChannelConsoleCommandNotifyErrors: 當使用者執行不符權限的指令時是否顯示錯誤訊息
# DiscordChatChannelConsoleCommandPrefix: 使用命令加上前綴 例如"!c tps"
# DiscordChatChannelConsoleCommandRolesAllowed: 可在聊天頻道中執行控制台指令的用戶組
# DiscordChatChannelConsoleCommandWhitelist: 可用DiscordChatChannelConsoleCommandPrefix所設定前綴來執行的指令
# DiscordChatChannelConsoleCommandWhitelistBypassRoles: 跳過白名單規則的用戶組
# DiscordChatChannelConsoleCommandWhitelistActsAsBlacklist: 是否將白名單改為黑名單
# DiscordChatChannelConsoleCommandExpiration: bot自動清除命令的時間 設定為0則不啟用此功能
# DiscordChatChannelConsoleCommandExpirationDeleteRequest: whether or not to delete the message of the person that originally issued the command
#
DiscordChatChannelConsoleCommandEnabled: true
DiscordChatChannelConsoleCommandNotifyErrors: true
DiscordChatChannelConsoleCommandPrefix: "!c"
DiscordChatChannelConsoleCommandRolesAllowed: ["Developer", "Owner"]
DiscordChatChannelConsoleCommandWhitelist: ["say", "lag", "tps"]
DiscordChatChannelConsoleCommandWhitelistBypassRoles: ["Owner", "Developer"]
DiscordChatChannelConsoleCommandWhitelistActsAsBlacklist: false
DiscordChatChannelConsoleCommandExpiration: 0
DiscordChatChannelConsoleCommandExpirationDeleteRequest: true

# 聊天頻道 玩家列表
# 顯示玩家列表指令的設定
#
# DiscordChatChannelListCommandEnabled: 是否啟用此命令
# DiscordChatChannelListCommandMessage: 命令名稱
# DiscordChatChannelListCommandExpiration: 列出名單後幾秒內被bot刪除, 設置為0表示不刪除。
# DiscordChatChannelListCommandExpirationDeleteRequest: 是否刪除使用者的要求
#
DiscordChatChannelListCommandEnabled: true
DiscordChatChannelListCommandMessage: "playerlist"
DiscordChatChannelListCommandExpiration: 10
DiscordChatChannelListCommandExpirationDeleteRequest: true

# 聊天頻道 黑名單及正則表達式
#
# DiscordChatChannelGameFilters: 正则表达式过滤器将应用于发送到Discord的聊天消息，如果结果为空，则根本不会发送消息
# DiscordChatChannelDiscordFilters: 正则表达式过滤器将应用于发送到Minecraft的聊天消息，如果结果为空，则根本不会发送消息
#
DiscordChatChannelGameFilters: {}
DiscordChatChannelDiscordFilters: {".*Online players\\(.*": "", ".*\\*\\*No online players\\*\\*.*": ""}

# 頻道主題內容更新設定
#
# ChannelTopicUpdaterChannelTopicsAtShutdownEnabled: 伺服器關閉時是否更新主題內容
# ChannelTopicUpdaterRateInMinutes: 主題內容更新間隔(分鐘）
#
ChannelTopicUpdaterChannelTopicsAtShutdownEnabled: true
ChannelTopicUpdaterRateInMinutes: 10

# Discord 自動回覆
# 這裡可以設定觸發的字串讓Bot進行罐頭訊息回覆
# 依照下列範例可以進行自訂
#
# 範例： {"觸發字串1": "回應1", "觸發字串2": "回應2", ...}  依此類推
# 若不想使用此功能請留白 如： {}
# PlaceholderAPI 的參數同樣支援使用
#
DiscordCannedResponses: {"!ip": "yourserveripchange.me", "!site": "http://yoursiteurl.net"}

# Minecraft 連結至 Discord
# 帳號連結設定
#
# MinecraftDiscordAccountLinkedConsoleCommands: 當帳號連結時所執行的指令, 參閱可用的下方變數
# MinecraftDiscordAccountUnlinkedConsoleCommands: 當帳號取消連結時所執行的指令, 參閱可用的下方變數
#
# %minecraftplayername%: 玩家的Minecraft名稱
#                         example: Notch
# %minecraftuuid%:       玩家的Minecraft UUID
#                         example: 你知道你的UUID長怎樣的...
# %discordid%:           連結的Discord ID
#                         example: 12345678901234567890
# %discordname%:         連結的Discord名稱
#                         example: Notch
#
# MinecraftDiscordAccountLinkedRoleNameToAddUserTo: 當使用者已連結帳號時將其加入該身分組
# MinecraftDiscordAccountLinkedAllowRelinkBySendingANewCode: 允许向机器人发送新代码以取消链接并与新代码重新链接
#
MinecraftDiscordAccountLinkedConsoleCommands: ["", "", ""]
MinecraftDiscordAccountUnlinkedConsoleCommands: ["", "", ""]
MinecraftDiscordAccountLinkedRoleNameToAddUserTo: "Linked"
MinecraftDiscordAccountLinkedAllowRelinkBySendingANewCode: false

# 伺服器監視器
#
# 此監視器會檢查上一個遊戲tick時間
# 若超過設定的時間沒有回應則會發送此訊息
#
# ServerWatchdogEnabled: 是否開啟此功能
# ServerWatchdogTimeout: 經過幾秒後監視器開始行動 (Spigot的崩潰偵測使用60）
#                        最小值為10
# ServerWatchdogMessageCount: 設定監視器發送幾次消息
#
ServerWatchdogEnabled: true
ServerWatchdogTimeout: 30
ServerWatchdogMessageCount: 3
