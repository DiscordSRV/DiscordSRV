# DiscordSRV設定
# 助けが必要？ Discord、https：//discordsrv.com/discordに参加してください

# ここは変更しないでください
ConfigVersion: ${project.version}

# Bot token: 取得したトークンはここに設定してください。設定方法は、プラグインの導入手順を参照してください。
BotToken: "BOTTOKEN"

# ゲームからDiscordへのチャンネルリンク
# 構文は Channels: {"Minecraftからのゲーム内チャネル名": "Discordからの数値チャネルID", "Minecraftからの別のゲーム内チャネル名": "Discordからの別の数値チャネルID"}
#
# DiscordSRVのメッセージはすべて、そのタイプのメッセージのチャネルが定義されていない限り、最初のチャネルに送られます。
# 互換性のあるチャットプラグインを使用する場合、チャネル名はそのプラグインのものになります（チャットメッセージ用）
#  - TownyChatを使用している場合、デフォルトのチャネルは通常"global"ではなく"general"と呼ばれます
# プレーヤーのチャットメッセージの場合（チャットプラグインを使用していない場合）: global
# サーバーの開始/停止メッセージ用: status
# アチーブメント/アドバンスメッセージ: awards
# 死のメッセージ: deaths
# 参加メッセージの場合: join
# メッセージを残す場合: leave
# dynmapメッセージの場合：dynmap
# ウォッチドッグメッセージの場合: watchdog
# / discordブロードキャストの場合: broadcasts （コマンドで指定されていない場合）
#
# チャンネルペアの最初の部分はDiscordチャンネル名ではありません！
Channels: {"global": "000000000000000000"}

# コンソールチャンネルの数値のID(チャンネル名ではありません)。コンソールチャンネルを全て無効にするなら、空のままにしてください。
DiscordConsoleChannelId: "000000000000000000"

# /discordの使用時にプレーヤーに表示される招待リンク、およびリンクが強制されるときにリンクされていないプレーヤーに表示されるメッセージに表示される招待リンク
DiscordInviteLink: "https://discord.gg/changethisintheconfig.yml"

# デバッグオプションです。必要無いなら変更しないでください。
#
# DebugLevel: 0 = デバッグメッセージを出力しません, 1 = デバッグメッセージを出力します, 2 = デバッグメッセージとスタックトレースを出力します。
#
DebugLevel: 0
DebugJDA: false
DebugJDARestActions: false
CancelConsoleCommandIfLoggingFailed: true
ForcedLanguage: none
AvatarUrl: https://mc-heads.net/avatar/{texture}/{size}.png
Experiment_JdbcAccountLinkBackend: "jdbc:mysql://HOST:PORT/DATABASE?autoReconnect=true&useSSL=false"
Experiment_JdbcTablePrefix: "discordsrv"
Experiment_JdbcUsername: "username"
Experiment_JdbcPassword: "password"
Experiment_WebhookChatMessageDelivery: false
Experiment_WebhookChatMessageUsernameFormat: "%displayname%"
Experiment_WebhookChatMessageFormat: "%message%"
Experiment_WebhookChatMessageUsernameFromDiscord: false
Experiment_WebhookChatMessageAvatarFromDiscord: false
Experiment_MCDiscordReserializer_ToDiscord: false
Experiment_MCDiscordReserializer_ToMinecraft: false
Experiment_MCDiscordReserializer_InBroadcast: false
PrintGuildsAndChannels: true
ForceTLSv12: true
NoopHostnameVerifier: false
MaximumAttemptsForSystemDNSBeforeUsingFallbackDNS: 3
TimestampFormat: EEE, d. MMM yyyy HH:mm:ss z
DateFormat: yyyy-MM-dd
# https://github.com/DiscordSRV/DiscordSRV/wiki/config#Timezone
Timezone: default

# プラグインフック
#
# DisabledPluginHooks: 無効化されたプラグインフック（通常はプラグインの名前だけ）
# VentureChatBungee: VentureChatフックのBungeeCord機能を有効にします（メッセージはすべてのサーバーから受信され、少なくとも1人のプレーヤーがオンラインである必要があります）
# EnablePresenceInformation: enabled presence information, which is required for some of our PlaceholderAPI placeholders. Keep in mind this requires the "Presence Intent" from the Discord developer portal
# UseModernPaperChatEvent: only use this if you have a chat plugins that SPECIFICALLY utilizes Paper's "AsyncChatEvent"
DisabledPluginHooks: []
VentureChatBungee: false
EnablePresenceInformation: false
UseModernPaperChatEvent: false

# Game Information
# Sets the "Playing: ______" indicator for the bot.
# Can be a single, static value, or cycle through multiple different options
# You can preface the status with "playing", "watching", or "listening to" to set the activity type
# PlaceholderAPI placeholders are supported
#
# DiscordGameStatus: Text to display. Can be a single value e.g. "Minecraft", or multiple values e.g. ["Minecraft", "yourip.changeme.com"]
# StatusUpdateRateInMinutes: How frequently to cycle the status
DiscordGameStatus: "playing Minecraft"
StatusUpdateRateInMinutes: 2

# チャットチャンネル情報
# チャットチャンネルは、DiscordのテキストチャンネルとMinecraftのゲーム内チャットを紐づけたチャンネルです。
# DiscordのチャットとMinecraftのチャットを、相互に転送することができます。
#
# DiscordChatChannelDiscordToMinecraft: Discordのテキストチャンネルのメッセージをゲーム内チャットに送信するかどうか
# DiscordChatChannelMinecraftToDiscord: ゲーム内チャットのメッセージをDiscordのテキストチャンネルに送信するかどうか
# DiscordChatChannelTruncateLength: DiscordからMinecraftに送信されるメッセージの最大長
# DiscordChatChannelTranslateMentions: @Person for Minecraftのような言い回しをDiscordメッセージに翻訳するかどうか
# DiscordChatChannelAllowedMentions: Minecraft toDiscordメッセージで許可されている言及の種類。 デフォルト値にないタイプは、「role」、「here」、および「everyone」です。
# DiscordChatChannelEmojiBehavior: どのように絵文字をMinecraftに送信するかを指定します。"show"、"name"、"hide"のいずれかです。
# DiscordChatChannelEmoteBehavior: Minecraftへのエモートの送信方法。"name"または "hide"を指定できます。
# DiscordChatChannelPrefixRequiredToProcessMessage: チャットの頭に付けると、MinecraftからDiscordに送信されるようにすることができるプレフィックス（例： "!"）。
# DiscordChatChannelRolesAllowedToUseColorCodesInChat: DiscordからMinecraftに送る時に、カラー/フォーマットコードを使用できるロールのリスト
# DiscordChatChannelBroadcastDiscordMessagesToConsole: Discordから送信されたメッセージをコンソールに出力するかどうか
# DiscordChatChannelBlockBots: ボットをDiscordからブロックする必要があるかどうか - > MCチャット
# DiscordChatChannelRequireLinkedAccount: プレイヤーに自分のDiscordアカウントをMinecraftにリンクさせて、DiscordメッセージをMinecraftに送るように要求するかどうか
# DiscordChatChannelBlockedIds: メッセージをブロックする、Discordユーザー（あるいはBot）のIDリスト
# DiscordChatChannelRolesSelectionAsWhitelist：次のリストをホワイトリスト（true）またはブラックリスト（false）として扱う場合
# DiscordChatChannelRolesSelection：すべてのユーザーの役割から除外する必要がある役割のリスト
# DiscordChatChannelRoleAliases: ロールエイリアスのリスト（Minecraftメッセージで使用するロールの代替名）
#
DiscordChatChannelDiscordToMinecraft: true
DiscordChatChannelMinecraftToDiscord: true
DiscordChatChannelTruncateLength: 256
DiscordChatChannelTranslateMentions: true
DiscordChatChannelAllowedMentions: [user, channel, emote]
DiscordChatChannelEmojiBehavior: "name"
DiscordChatChannelEmoteBehavior: "name"
DiscordChatChannelPrefixRequiredToProcessMessage: ""
DiscordChatChannelRolesAllowedToUseColorCodesInChat: ["Developer", "Owner", "Admin", "Moderator"]
DiscordChatChannelBroadcastDiscordMessagesToConsole: true
DiscordChatChannelRequireLinkedAccount: false
DiscordChatChannelBlockBots: false
DiscordChatChannelBlockedIds: ["000000000000000000", "000000000000000000", "000000000000000000"]
DiscordChatChannelRolesSelectionAsWhitelist: false
DiscordChatChannelRolesSelection: ["Don't show me!", "Misc role"]
DiscordChatChannelRoleAliases: {"Developer": "Dev"}

# コンソールチャンネル情報
# コンソールチャンネルは、DiscordのテキストチャンネルとMinecraftのサーバーコンソールを紐づけたチャンネルです。
# Discordのテキストチャンネルからコンソールにコマンドを送ったり、コンソールの出力内容をDiscordで見たりすることができます。
#
# messages.yml（タイムスタンプの削除を含む）でコンソールメッセージをカスタマイズすることができます。
#
# DiscordConsoleChannelLogRefreshRateInSeconds: コンソールの表示内容を送信する間隔（秒単位）
# DiscordConsoleChannelUsageLog:
#    %date%:   現在の日付
#              例: 2017-01-01
#    PlaceholderAPIプレースホルダーがサポートされています
# DiscordConsoleChannelBlacklistActsAsWhitelist: "DiscordConsoleChannelBlacklistedCommands"設定を、ブラックリストの代わりにホワイトリストとして動作させるかどうか
# DiscordConsoleChannelBlacklistedCommands: Discordのユーザーがコンソールにコマンドとして送信できないようにするブラックリスト
# DiscordConsoleChannelBlacklistedCommands: phrases wrapped in quotation marks that users should not be able to send as commands to the console
# DiscordConsoleChannelFilters: Discordに送信されるコンソール回線に適用される正規表現フィルター。結果が空の場合、メッセージはまったく送信されません。
# DiscordConsoleChannelLevels: アペンダーを介してコンソールチャネルに送信するログレベル
# DiscordConsoleChannelAllowPluginUpload: プラグインをコンソールチャネルにアップロードすると、プラグインがサーバーに自動的に追加されます。
#
DiscordConsoleChannelLogRefreshRateInSeconds: 5
DiscordConsoleChannelUsageLog: "Console-%date%.log"
DiscordConsoleChannelBlacklistActsAsWhitelist: false
DiscordConsoleChannelBlacklistedCommands: ["?", "op", "deop", "execute"]
DiscordConsoleChannelFilters: {".*(?i)async chat thread.*": "", ".*There are \\d+ (?:of a max of|out of maximum) \\d+ players online.*": ""}
DiscordConsoleChannelLevels: [info, warn, error]
DiscordConsoleChannelAllowPluginUpload: false

# チャットチャンネルコマンド実行コマンド
# 登録されたチャットチャンネルから、Prefixを付けてコマンドを書くと、コンソールコマンドを実行させることができます。
# 例えば、"!c kick Notch" のように発言すると、コンソールで "kick Notch" コマンドを実行することができます。
#
# DiscordChatChannelConsoleCommandEnabled: チャットチャネルからのコンソールコマンドを許可するかどうか
# DiscordChatChannelConsoleCommandNotifyErrors: 権限のないユーザーがコマンドを実行したときに、権限が無いことを通知するかどうか
# DiscordChatChannelConsoleCommandPrefix: コンソールコマンドに使用するPrefix。例: "!c tps"
# DiscordChatChannelConsoleCommandRolesAllowed: チャットチャネルからサーバーコマンドの実行を許可するロール
# DiscordChatChannelConsoleCommandWhitelist: DiscordChatChannelConsoleCommandPrefixで実行可能なコマンドのリスト
# DiscordChatChannelConsoleCommandWhitelistBypassRoles: Whitelistに関係なくコマンドを実行することを許可するロールのリスト
# DiscordChatChannelConsoleCommandWhitelistActsAsBlacklist: "DiscordChatChannelConsoleCommandWhitelist"設定を、ホワイトリストの代わりにブラックリストとして動作させるかどうか
# DiscordChatChannelConsoleCommandExpiration: 送信されたコマンド出力がボットによって自動的に削除されるまでの時間（秒）。有効期限を無効にするには0に設定します。
# DiscordChatChannelConsoleCommandExpirationDeleteRequest: コマンドを発行した人のメッセージを削除するかどうか
#
DiscordChatChannelConsoleCommandEnabled: true
DiscordChatChannelConsoleCommandNotifyErrors: true
DiscordChatChannelConsoleCommandPrefix: "!c"
DiscordChatChannelConsoleCommandRolesAllowed: ["Developer", "Owner"]
DiscordChatChannelConsoleCommandWhitelist: ["say", "lag", "tps"]
DiscordChatChannelConsoleCommandWhitelistBypassRoles: ["Owner", "Developer"]
DiscordChatChannelConsoleCommandWhitelistActsAsBlacklist: false
DiscordChatChannelConsoleCommandExpiration: 0
DiscordChatChannelConsoleCommandExpirationDeleteRequest: true

# チャットチャンネルプレイヤーリストコマンド
# playerlistコマンドの設定内容
#
# DiscordChatChannelListCommandEnabled: コマンドを有効にするかどうか
# DiscordChatChannelListCommandMessage: プレイヤーリストのコマンド
# DiscordChatChannelListCommandExpiration: 送信されたプレーヤーのリストメッセージがボットによって自動的に削除されるまでの時間（秒）。有効期限を無効にするには0に設定します。
# DiscordChatChannelListCommandExpirationDeleteRequest: プレイヤーリストを要求した人のメッセージを削除するかどうか
#
DiscordChatChannelListCommandEnabled: true
DiscordChatChannelListCommandMessage: "playerlist"
DiscordChatChannelListCommandExpiration: 10
DiscordChatChannelListCommandExpirationDeleteRequest: true

# チャットチャンネル ブラックリストのフレーズと正規表現
#
# DiscordChatChannelGameFilters: Discordに送信されるチャットメッセージに適用される正規表現フィルター。結果が空の場合、メッセージはまったく送信されません。
# DiscordChatChannelDiscordFilters: Minecraftに送信されるチャットメッセージに適用される正規表現フィルター。結果が空の場合、メッセージはまったく送信されません。
#
DiscordChatChannelGameFilters: {}
DiscordChatChannelDiscordFilters: {".*Online players\\(.*": "", ".*\\*\\*No online players\\*\\*.*": ""}

# チャンネルトピック設定
#
# ChannelTopicUpdaterChannelTopicsAtShutdownEnabled: サーバーのシャットダウン時にチャンネルのトピックを変更する必要があるかどうか
# ChannelTopicUpdaterRateInMinutes: チャンネルのトピックを自動的に更新する間隔（分）
#
ChannelTopicUpdaterChannelTopicsAtShutdownEnabled: true
ChannelTopicUpdaterRateInMinutes: 10

# Discord 定型文応答
# これらは、定型文を返信するための設定です。
# おそらく、デフォルトから変更するか、独自のものを追加するべきです。
#
# 書き方は、  {"トリガー": "応答", "トリガー": "応答", ...}
# 定型文の応答を必要としない場合は、{} に設定してください。
# PlaceholderAPIプレースホルダがサポートされています
#
DiscordCannedResponses: {"!ip": "yourserveripchange.me", "!site": "http://yoursiteurl.net"}

# Minecraft から Discord へのアカウントリンク
# これらは、MinecraftアカウントをDiscordアカウントにリンクする機能に関する設定オプションです
#
# MinecraftDiscordAccountLinkedConsoleCommands: アカウントがリンクされているときに実行するコマンド。使用可能なキーワードについては以下を参照してください。
# MinecraftDiscordAccountUnlinkedConsoleCommands: アカウントのリンクが解除されたときに実行されるコマンド。可能なプレースホルダについては以下を参照してください。
# %minecraftplayername%: Minecraftのプレイヤー名
#                         例: Notch
# %minecraftuuid%:       プレイヤーのUUID
#                         例: you know what a uuid looks like
# %discordid%:           リンクされたDiscordのアカウントID
#                         例: 12345678901234567890
# %discordname%:         リンクされたDiscordのアカウント名
#                         例: Notch
#
# MinecraftDiscordAccountLinkedRoleNameToAddUserTo: Discordユーザーが自分のアカウントをリンクするときに追加するDiscordロール名
# MinecraftDiscordAccountLinkedAllowRelinkBySendingANewCode: 新しいコードをボットに送信して新しいコードとのリンクを解除して再リンクすることを許可する
#
MinecraftDiscordAccountLinkedConsoleCommands: ["", "", ""]
MinecraftDiscordAccountUnlinkedConsoleCommands: ["", "", ""]
MinecraftDiscordAccountLinkedRoleNameToAddUserTo: "Linked"
MinecraftDiscordAccountLinkedAllowRelinkBySendingANewCode: false

# Server ウォッチドッグ
#
# ウォッチドッグは、サーバがゲームチックを実行した最後の時間を常に監視します
# 最後のtick以降の時間が設定された間隔（秒）を超えると、Discordメッセージがトリガーされます
# サーバーが重くなっていることを通知するために使用してください
#
# ServerWatchdogEnabled: ウォッチドッグを有効にするかどうか
# ServerWatchdogTimeout: ウォッチドッグが動作するまでに経過する必要のある秒数（Spigotのクラッシュ検出では、60秒が使用されています）
#                        この設定の最小値は10秒です。
# ServerWatchdogMessageCount: ServerWatchdogMessageが送信される回数。
#
ServerWatchdogEnabled: true
ServerWatchdogTimeout: 60
ServerWatchdogMessageCount: 3
