# DiscordSRV 設定檔
# 需要協助嗎？加入我們的 Discord： https://discordsrv.com/discord

# 請勿更動此行
ConfigVersion: ${version}

# 機器人權杖 (Bot Token)；不知道這是什麼嗎？請參考插件頁面上的教學影片
# 更改此選項後必須重啟您的伺服器
BotToken: "BOTTOKEN"

# 從遊戲內連結到 Discord 的頻道
# 語法為 Channels: {"Minecraft 遊戲內頻道名稱": "Discord 頻道數字 ID", "另一個 Minecraft 遊戲內頻道名稱": "另一個 Discord 頻道數字 ID"}
#
# 除非有為特定訊息類型定義專屬頻道，否則 DiscordSRV 的所有訊息都將發送到第一個頻道：
# 當使用相容的聊天插件時，頻道名稱將是該插件的頻道名稱 (用於聊天訊息)
#  - 如果您使用 TownyChat，預設頻道通常叫做 "general" 而非 "global"
# 玩家聊天訊息 (未使用聊天插件時): global
# 伺服器啟動/停止訊息: status
# 成就/進度訊息: awards
# 死亡訊息: deaths
# 加入訊息: join
# 離開訊息: leave
# dynmap 訊息: dynmap
# watchdog (看門狗) 訊息: watchdog
# /discord broadcast (廣播) 訊息: broadcasts (除非在指令中指定)
# 帳號連結訊息: link
#
# 成對設定的第一部分不是 Discord 的頻道名稱！
# 更改此選項後請執行 "/discord reload" 以套用
Channels: {"global": "000000000000000000"}

# 主控台頻道的數字 ID (不是名稱)，留空以完全禁用主控台頻道
DiscordConsoleChannelId: "000000000000000000"

# 使用 /discord 指令時，以及在強制連結帳號時向未連結玩家顯示的邀請連結
DiscordInviteLink: "https://discord.gg/changethisintheconfig.yml"

# 實驗性功能
# 這些功能尚未完全優化；請自行承擔使用風險

# JDBC (MySQL/MariaDB)
Experiment_JdbcAccountLinkBackend: "jdbc:mysql://HOST:PORT/DATABASE?autoReconnect=true&useSSL=false"
Experiment_JdbcTablePrefix: "discordsrv"
Experiment_JdbcUsername: "username"
Experiment_JdbcPassword: "password"

# Webhook 傳送
Experiment_WebhookChatMessageDelivery: false
Experiment_WebhookChatMessageUsernameFormat: "%displayname%"
Experiment_WebhookChatMessageFormat: "%message%"
Experiment_WebhookChatMessageUsernameFromDiscord: false
Experiment_WebhookChatMessageAvatarFromDiscord: false
Experiment_WebhookChatMessageUsernameFilters: {}

# 嵌入訊息 & Webhook 的圖片/頭像 URL 格式
# 留空以使用預設值
# 可用佔位符： {texture} {username} {uuid} {uuid-nodashes} {size}
AvatarUrl: ""

# 格式轉換器
# 在 Minecraft 和 Discord 之間轉換格式 (粗體、斜體、底線、刪除線)
Experiment_MCDiscordReserializer_ToDiscord: false
Experiment_MCDiscordReserializer_ToMinecraft: false
Experiment_MCDiscordReserializer_InBroadcast: false

# 其他
CancelConsoleCommandIfLoggingFailed: true
ForcedLanguage: none
ForceTLSv12: true
NoopHostnameVerifier: false
MaximumAttemptsForSystemDNSBeforeUsingFallbackDNS: 3
TimestampFormat: EEE, d. MMM yyyy HH:mm:ss z
DateFormat: yyyy-MM-dd
# https://docs.discordsrv.com/config/#Timezone
Timezone: default
# MinecraftMentionSound: 當玩家在 Minecraft 中被從 Discord 提及時，是否向其發送音效
MinecraftMentionSound: true

# 插件掛鉤 (Hooks)
# 更改這些選項後必須重啟您的伺服器
#
# DisabledPluginHooks: 將不被使用的插件掛鉤 (通常只是插件的名稱)。
# VentureChatBungee: 啟用 VentureChat 掛鉤的 BungeeCord 功能 (從每個伺服器接收訊息，需要至少有 1 名玩家在線)
# EnablePresenceInformation: 啟用狀態資訊，這是我們某些 PlaceholderAPI 佔位符所必需的。請注意，這需要在 Discord 開發者入口網站中啟用 "Presence Intent"
# UseModernPaperChatEvent: 只有在您有聊天插件「明確」使用 Paper 的 "AsyncChatEvent" 時才使用此選項
DisabledPluginHooks: []
VentureChatBungee: false
EnablePresenceInformation: false
UseModernPaperChatEvent: false

# 遊戲資訊
# 設定機器人的使用者狀態
# 可以是單一的靜態值，或在多個不同選項之間循環
# 您可以在狀態前加上 "playing" (正在玩)、"watching" (正在看)、"listening to" (正在聽) 或 "competing" (正在競爭) 來設定活動類型
# 您也可以不加前綴來設定自訂狀態
#    %online%: 在線玩家數量
#    支援 PlaceholderAPI 佔位符
#
# DiscordGameStatus: 要顯示的文字。可以是單一值，例如 "Minecraft"，或多個值，例如 ["Minecraft", "yourip.changeme.com"]
# DiscordOnlineStatus: 要顯示的活動狀態。必須是以下之一：ONLINE (線上), DND (請勿打擾), IDLE (閒置) 或 INVISIBLE (隱形)
# StatusUpdateRateInMinutes: 狀態循環更新的頻率 (分鐘)
DiscordGameStatus: ["playing Minecraft"]
DiscordOnlineStatus: ONLINE
StatusUpdateRateInMinutes: 2

# 聊天頻道資訊
# 聊天頻道是所有遊戲內訊息將被發送至的文字頻道，且所有發送到此 Discord 頻道的訊息也將被發送到遊戲內
#
# DiscordChatChannelDiscordToMinecraft: 是否將聊天頻道中的訊息發送到伺服器聊天室
# DiscordChatChannelMinecraftToDiscord: 是否將伺服器聊天室中的訊息發送到聊天頻道
# DiscordChatChannelTruncateLength: 從 Discord 發送到 Minecraft 的訊息最大長度
# DiscordChatChannelTranslateMentions: 在 Minecraft 到 Discord 的訊息中，是否翻譯像 @使用者 這樣的提及
# DiscordChatChannelAllowedMentions: 在 Minecraft 到 Discord 的訊息中允許的提及類型；預設值中缺少的類型是 "role" (身份組), "here" (此頻道), & "everyone" (所有人)
# DiscordChatChannelEmojiBehavior: 表情符號應如何發送到 Minecraft。可以是 "show" (顯示), "name" (名稱) 或 "hide" (隱藏)
# DiscordChatChannelEmoteBehavior: 自訂表情應如何發送到 Minecraft。可以是 "name" (名稱) 或 "hide" (隱藏)
# DiscordChatChannelPrefixRequiredToProcessMessage: 訊息需要以此字元(串)為前綴才能從 Minecraft 發送到 Discord (例如 "!")
# DiscordChatChannelPrefixActsAsBlacklist: 該前綴是否應作為黑名單使用
# DiscordChatChannelRolesAllowedToUseColorCodesInChat: 允許在 Discord 到 Minecraft 聊天中使用顏色/格式代碼的身份組列表
# DiscordChatChannelBroadcastDiscordMessagesToConsole: 是否將處理過的 Discord 訊息打印到主控台
# DiscordChatChannelRequireLinkedAccount: 是否要求玩家將其 Discord 帳號連結到 Minecraft 帳號才能將其 Discord 訊息發送到 Minecraft
# DiscordChatChannelBlockBots: 是否應阻止機器人從 Discord -> MC 聊天
# DiscordChatChannelBlockWebhooks: 是否應阻止 Webhooks 從 Discord -> MC 聊天
# DiscordChatChannelBlockedIds: 不應處理其訊息並發送到 MC 的 Discord 使用者 (或機器人) 的 ID
# DiscordChatChannelBlockedRolesAsWhitelist: 下列列表應被視為白名單 (true) 還是黑名單 (false)
# DiscordChatChannelBlockedRolesIds: 不應處理其訊息並發送到 MC 的 Discord 身份組的 ID
# DiscordChatChannelRolesSelectionAsWhitelist: 下列列表應被視為白名單 (true) 還是黑名單 (false)
# DiscordChatChannelRolesSelection: 應從使用者所有身份組中過濾掉的身份組列表
# DiscordChatChannelRoleAliases: 身份組別名列表 (在 Minecraft 訊息中使用的身份組替代名稱)
#
DiscordChatChannelDiscordToMinecraft: true
DiscordChatChannelMinecraftToDiscord: true
DiscordChatChannelTruncateLength: 256
DiscordChatChannelTranslateMentions: true
DiscordChatChannelAllowedMentions: [user, channel, emote]
DiscordChatChannelEmojiBehavior: "name"
DiscordChatChannelEmoteBehavior: "name"
DiscordChatChannelPrefixRequiredToProcessMessage: ""
DiscordChatChannelPrefixActsAsBlacklist: false
DiscordChatChannelRolesAllowedToUseColorCodesInChat: ["Developer", "Owner", "Admin", "Moderator"]
DiscordChatChannelBroadcastDiscordMessagesToConsole: true
DiscordChatChannelRequireLinkedAccount: false
DiscordChatChannelBlockBots: false
DiscordChatChannelBlockWebhooks: true
DiscordChatChannelBlockedIds: ["000000000000000000", "000000000000000000", "000000000000000000"]
DiscordChatChannelBlockedRolesAsWhitelist: false
DiscordChatChannelBlockedRolesIds: ["000000000000000000", "000000000000000000", "000000000000000000"]
DiscordChatChannelRolesSelectionAsWhitelist: false
DiscordChatChannelRolesSelection: ["Don't show me!", "Misc role"]
DiscordChatChannelRoleAliases: {"Developer": "Dev"}

# 主控台頻道資訊
# 主控台頻道是一個文字頻道，它接收的訊息將由主控台作為伺服器指令執行，同時伺服器的主控台內容也會逐行串流到此處
#
# 您可以在 messages.yml 中自訂訊息，包括移除時間戳
#
# DiscordConsoleChannelLogRefreshRateInSeconds: 從主控台發送行的間隔時間 (秒)
# DiscordConsoleChannelUsageLog:
#    %date%:  目前日期
#              範例: 2017-01-01
#    支援 PlaceholderAPI 佔位符
# DiscordConsoleChannelBlacklistActsAsWhitelist: 黑名單指令列表是否作為白名單而非黑名單使用
# DiscordConsoleChannelBlacklistedCommands: 用戶不應能作為指令發送到主控台的詞組 (用引號括起來)
# DiscordConsoleChannelFilters: 應用於發送到 Discord 的主控台行的正規表示式過濾器，如果結果為空，則訊息將不會被發送
# DiscordConsoleChannelLevels: 透過 appender 發送到主控台頻道的日誌等級
# DiscordConsoleChannelUseCodeBlocks: 主控台輸出是否應被包裝在代碼區塊中並帶有顏色
# DiscordConsoleChannelBlockBots: 是否應允許機器人在主控台頻道中發送指令
#
DiscordConsoleChannelLogRefreshRateInSeconds: 5
DiscordConsoleChannelUsageLog: "Console-%date%.log"
DiscordConsoleChannelBlacklistActsAsWhitelist: false
DiscordConsoleChannelBlacklistedCommands: ["?", "op", "deop", "execute"]
DiscordConsoleChannelFilters: {".*(?i)async chat thread.*": "", ".*There are \\d+ (?:of a max of|out of maximum) \\d+ players online.*": ""}
DiscordConsoleChannelLevels: [info, warn, error]
DiscordConsoleChannelUseCodeBlocks: true
DiscordConsoleChannelBlockBots: true

# 聊天頻道指令執行
# 這些選項控制了從已註冊的聊天頻道中，透過說出例如 "!c kick Notch" (或任何前綴) 來以主控台身份執行指令的能力
#
# DiscordChatChannelConsoleCommandEnabled: 是否允許從聊天頻道執行主控台指令
# DiscordChatChannelConsoleCommandNotifyErrors: 當沒有權限的使用者嘗試執行指令時，是否向其發送沒有權限的通知
# DiscordChatChannelConsoleCommandPrefix: 用於主控台指令的前綴。例如 "!c tps"
# DiscordChatChannelConsoleCommandRolesAllowed: 允許從聊天頻道執行伺服器指令的使用者身份組
# DiscordChatChannelConsoleCommandWhitelist: 能夠使用 DiscordChatChannelConsoleCommandPrefix 執行的指令列表
# DiscordChatChannelConsoleCommandWhitelistBypassRoles: 能夠繞過白名單的身份組列表
# DiscordChatChannelConsoleCommandWhitelistActsAsBlacklist: 指令白名單是否應作為黑名單使用
# DiscordChatChannelConsoleCommandExpiration: 發送的指令輸出被機器人自動刪除前的時間 (秒)。設為 0 以禁用過期刪除。
# DiscordChatChannelConsoleCommandExpirationDeleteRequest: 是否刪除最初發出指令者的訊息
#
DiscordChatChannelConsoleCommandEnabled: true
DiscordChatChannelConsoleCommandNotifyErrors: true
DiscordChatChannelConsoleCommandPrefix: "!c"
DiscordChatChannelConsoleCommandRolesAllowed: ["Owner", "Developer"]
DiscordChatChannelConsoleCommandWhitelist: ["say", "lag", "tps"]
DiscordChatChannelConsoleCommandWhitelistBypassRoles: ["Owner", "Developer"]
DiscordChatChannelConsoleCommandWhitelistActsAsBlacklist: false
DiscordChatChannelConsoleCommandExpiration: 0
DiscordChatChannelConsoleCommandExpirationDeleteRequest: true

# 聊天頻道玩家列表指令
# 玩家列表指令的所有設定
#
# DiscordChatChannelListCommandEnabled: 該指令是否啟用
# DiscordChatChannelListCommandMessage: 人們可以輸入以獲取玩家列表的指令
# DiscordChatChannelListCommandExpiration: 發送的玩家列表訊息被機器人自動刪除前的時間 (秒)。設為 0 以禁用過期刪除。
# DiscordChatChannelListCommandExpirationDeleteRequest: 是否刪除最初請求玩家列表者的訊息
#
DiscordChatChannelListCommandEnabled: true
DiscordChatChannelListCommandMessage: "playerlist"
DiscordChatChannelListCommandExpiration: 10
DiscordChatChannelListCommandExpirationDeleteRequest: true

# 聊天頻道黑名單詞組 & 正規表示式
#
# DiscordChatChannelGameFilters: 應用於發送到 Discord 的聊天訊息的正規表示式過濾器，如果結果為空，訊息將不會被發送
# DiscordChatChannelDiscordFilters: 應用於發送到 Minecraft 的聊天訊息的正規表示式過濾器，如果結果為空，訊息將不會被發送
#
DiscordChatChannelGameFilters: {}
DiscordChatChannelDiscordFilters: {".*Online players \\(.*": "", ".*\\*\\*No online players\\*\\*.*": ""}

# 頻道主題更新器設定
#
# ChannelTopicUpdaterChannelTopicsAtShutdownEnabled: 伺服器關閉時是否要更改頻道主題
# ChannelTopicUpdaterRateInMinutes: 自動以最新資訊更新頻道主題的間隔分鐘數
#
ChannelTopicUpdaterChannelTopicsAtShutdownEnabled: true
ChannelTopicUpdaterRateInMinutes: 10

# 頻道名稱更新器
# 此功能會更改指定頻道的名稱以符合遊戲內的佔位符
# 選項:
#   ChannelId: 要更改的頻道 ID (必需)
#   Format: 頻道的格式 (必需)。可用佔位符：
#     %playercount%:   目前玩家數量
#     %playermax%:     最大玩家數量
#     %date%:          目前日期與時間
#     %totalplayers%:  曾加入主世界的玩家總數
#     %uptimemins%:    自 DiscordSRV 啟動以來的分鐘數
#     %uptimehours%:   自 DiscordSRV 啟動以來的小時數
#     %motd%:          伺服器的 MOTD
#     %serverversion%: 伺服器版本，例如 Spigot-1.9
#     %freememory%:    JVM 的可用記憶體 (MB)
#     %usedmemory%:    JVM 的已用記憶體 (MB)
#     %totalmemory%:   JVM 的總記憶體 (MB)
#     %maxmemory%:     JVM 的最大記憶體 (MB)
#     %freememorygb%:  JVM 的可用記憶體 (GB)
#     %usedmemorygb%:  JVM 的已用記憶體 (GB)
#     %totalmemorygb%: JVM 的總記憶體 (GB)
#     %maxmemorygb%:   JVM 的最大記憶體 (GB)
#     %tps%:           伺服器的平均 TPS
#     也支援 PlaceholderAPI 佔位符
#   ShutdownFormat: 伺服器關閉時頻道應採用的格式。可用佔位符：
#     %time% 或 %date%: 目前日期與時間
#     %serverversion%:  伺服器版本
#     %totalplayers%:   曾加入主世界的玩家總數
#     %timestamp%:      目前的 Unix 時間戳
#   UpdateInterval: 更新頻道名稱之間的等待時間 (分鐘) (由於速率限制，最小值為 10)
ChannelUpdater:
  - ChannelId: "0000000000000000"
    Format: "%playercount% 位玩家在線"
    ShutdownFormat: "伺服器已離線"
    UpdateInterval: 10
  - ChannelId: "0000000000000000"
    Format: "目前 TPS: %tps%"
    ShutdownFormat: "伺服器已離線"
    UpdateInterval: 10

# Discord 預設回應
# 這些是觸發詞 (類似指令)，將會觸發一個「預設回應」作為對它們的回覆
# 您可能需要更改這些預設值或新增您自己的
#
# 語法為 {"觸發詞": "回應", "觸發詞": "回應", ...}
# 如果您不想要任何預設回應，請將此設定為 {}
# 值的部分支援 PlaceholderAPI 佔位符
#
DiscordCannedResponses: {"!ip": "yourserveripchange.me", "!site": "http://yoursiteurl.net"}

# Minecraft 與 Discord 帳號連結
# 這些是關於連結 Minecraft 帳號與 Discord 帳號功能的選項
#
# MinecraftDiscordAccountLinkedConsoleCommands: 帳號連結時執行的指令，可用佔位符見下方
# MinecraftDiscordAccountUnlinkedConsoleCommands: 帳號取消連結時執行的指令，可用佔位符見下方
# %minecraftplayername%: 玩家的 Minecraft 使用者名稱
#                         範例: Notch
# %minecraftuuid%:       玩家的 UUID
#                         範例: 你知道 UUID 長什麼樣子
# %discordid%:           已連結的 Discord 帳號 ID
#                         範例: 12345678901234567890
# %discordname%:         已連結的 Discord 帳號使用者名稱
#                         範例: Notch
#
# MinecraftDiscordAccountLinkedRoleNameToAddUserTo: 當使用者連結帳號時，要將其加入的 Discord 身份組的名稱或 ID
# MinecraftDiscordAccountLinkedAllowRelinkBySendingANewCode: 允許透過向機器人發送新代碼來取消連結並使用新代碼重新連結
# MinecraftDiscordAccountLinkedUsePM: 使用私訊 (PM) 連結帳號
# MinecraftDiscordAccountLinkedMessageDeleteSeconds: 在文字頻道中連結成功後，刪除訊息前的時間 (秒)。設為 0 則不刪除訊息。
#
MinecraftDiscordAccountLinkedConsoleCommands: ["", "", ""]
MinecraftDiscordAccountUnlinkedConsoleCommands: ["", "", ""]
MinecraftDiscordAccountLinkedRoleNameToAddUserTo: "Linked"
MinecraftDiscordAccountLinkedAllowRelinkBySendingANewCode: false
MinecraftDiscordAccountLinkedUsePM: true
MinecraftDiscordAccountLinkedMessageDeleteSeconds: 0

# 伺服器看門狗 (Watchdog)
#
# 看門狗會持續監控您伺服器上一次執行遊戲刻 (tick) 的時間
# 如果自上一次刻以來經過的時間超過設定的秒數，可以觸發 Discord 訊息
#
# ServerWatchdogEnabled: 看門狗是否啟用
# ServerWatchdogTimeout: 看門狗採取行動前需要經過的時間 (秒) (Spigot 的崩潰偵測對此使用 60)
#                        此值的最小值為 10
# ServerWatchdogMessageCount: ServerWatchdogMessage 被發送的次數。如果您*真的*想確保自己知道出問題了，這很有用
#
ServerWatchdogEnabled: true
ServerWatchdogTimeout: 30
ServerWatchdogMessageCount: 3

# 用於連接到 Discord API 的 HTTP 代理
# 如果您不了解它的作用，請不要動它
ProxyHost: "example.com"
ProxyPort: 1234
ProxyUser: "USERNAME"
ProxyPassword: "PASSWORD"

# 除錯資訊
# 除非您正在嘗試定位問題，否則不要啟用這些
#
# 可用的除錯類別:
# MINECRAFT_TO_DISCORD  - 來自 Minecraft 的訊息
# DISCORD_TO_MINECRAFT  - 來自 Discord 的訊息
# GROUP_SYNC            - 群組同步
# PRESENCE              - 機器人的遊戲狀態或狀態
# VOICE                 - 語音模組 (見 voice.yml)
# REQUIRE_LINK          - 需要連結才能加入的模組 (見 linking.yml)
# NICKNAME_SYNC         - 暱稱同步
# ALERTS                - 提醒 (見 alerts.yml)
# WATCHDOG              - 看門狗
# BAN_SYNCHRONIZATION   - 封鎖同步
# LP_CONTEXTS           - LuckPerms 的 contexts
# ACCOUNT_LINKING       - Discord/Minecraft 帳號連結
#
# UNCATEGORIZED         - 任何不在上述類別中的內容
# ALL                   - 所有上述類別 (包括 UNCATEGORIZED)
#
# JDA                   - JDA 的除錯訊息
# JDA_REST_ACTIONS      - 用於除錯 JDA 的 rest actions
# CALLSTACKS            - 顯示 DiscordSRV 除錯呼叫的堆疊追蹤
#
# 範例: "Debug: [GROUP_SYNC, PRESENCE]"
#
Debug: []
