# Dies ist eine erweiterte Funktion von DiscordSRV, mit der du Nachrichten an Discord senden kannst, wenn ein Spielereignis eintritt
# oder ein Befehl ausgeführt wird. Du benötigst dafür Kenntnisse über die Funktionsweise von Bukkit-Ereignissen und deren Eigenschaften.
# Wenn du dir nicht sicher bist, was du hier tun sollst, frage vielleicht einen Entwickler oder tritt unserem Support-Server unter discordsrv.com/discord bei.
# Hast du etwas erstellt, das du gerne teilen möchtest? Dann kannst du dies im Forum #alerts unseres Discord-Servers tun (Einladung siehe oben).
#
# Weitere Informationen zu den zu verwendenden Ereignissen und Eigenschaften findest du in der Bukkit-API-Javadoc:
#  https://hub.spigotmc.org/javadocs/bukkit
# Hilfreiche Ressourcen zum Erlernen der Verwendung von SpEL:
#  https://docs.spring.io/spring/docs/4.2.x/spring-framework-reference/html/expressions.html
#  https://dzone.com/articles/learn-spring-expression-language-with-examples
#
# Du kannst folgende Platzhalter verwenden:
#  {tps} - Server TPS
#  {time} - formattierte Zeit
#  {date} - formattiertes Datum
#  {name} - Wenn die Benachichtigung ein Spielerereignis betrifft, der Name des Spielers
#  {ping} - Wenn die Benachichtigung ein Spielerereignis betrifft, der Ping des Spielers
#  {username} - Wenn die Benachichtigung ein Spielerereignis betrifft, der Benutzername des Spielers
#  {displayname} - Wenn die Benachichtigung ein Spielerereignis betrifft, der angezeigte Name des Spielers
#  {usernamenoescapes} - Wenn die Benachrichtigung ein Spielerereignis betrifft, der Benutzername des Spielers ohne Escape-Zeichen im Discord-Format (zur Verwendung in Inline-Code und Code-Block-Markdown).
#  {displaynamenoescapes} - Wenn die Benachrichtigung ein Spielerereignis betrifft, wird der Anzeigename des Spielers ohne Escape-Zeichen im Discord-Format angezeigt (zur Verwendung in Inline-Code und Code-Block-Markdown).
#  {world} - Wenn die Benachichtigung ein Spielerereignis betrifft, die Welt des Spielers
#  {embedavatarurl} - Wenn die Benachrichtigung ein Spielerereignis betrifft, die Avatar-URL für den Kopf des Spielers, andernfalls die Avatar-URL des Bots.
#  {botavatarurl} - Die Avatar-URL des Bots
#  {botname} - Der Name des Bots
#  %placeholder% - alle PlaceholderAPi Platzhalter, es können nur Spieler-Platzhalter verwendet werden, wenn das Event ein Spieler-Event ist.
#
# Du kannst auch SpEL-Ausdrücke mit ${Ausdruck...} verwenden, wie zum Beispiel...
#  - Die IP eines Spielers ermitteln: ${#player.address.address.hostAddress}
#  - Den Spielmodus eines Spielers ermitteln: ${#player.gameMode.name()}
#  - Die mit dem Spieler verlinkte Discord ID ermitteln: ${#discordsrv.accountLinkManager.getDiscordId(#player.uniqueId)}
#  - Die Anzahl der Online-Spieler ermitteln: ${#server.onlinePlayers.size()}
#  - Den Status der Verbindung von DiscordSRV zu Discord abrufen: ${#jda.status.name()}
#  - Überprüfen, ob sich ein Spieler in einer bestimmten Welt befindet: ${#player.world.name == 'world_the_end'}
#  - Überprüfen, ob es Tag ist in der Welt, in der sich der Spieler befindet: ${#player.world.time > 0 && #player.world.time < 13000}
#  Du kannst die folgenden Platzhalter für Ausdrücke verwenden, wie oben gezeigt:
#   #plugins.<plugin> - Die angegebene Plugin-Instanz, null, wenn sie nicht existiert
#   #event - Das Ereignis, das den Alarm auslöst, wenn es sich bei diesem Alarm um einen Ereignisalarm handelt
#   #server - Die Bukkit-API-Serverinstanz, entspricht Bukkit#getServer
#   #discordsrv - die DiscordSRV-Plugin-Instanz
#   #player - Der Spieler, für den das Ereignis bestimmt ist, wenn es sich um ein Spielerereignis oder einen Befehl handelt
#   #sender - Der Absender des Befehls, wenn es sich um eine Befehlswarnung handelt.
#   #command - Der vollständige Befehl ohne führenden Schrägstrich, wenn es sich um eine Befehlswarnung handelt
#   #args - die Befehlsargumente, wenn es sich um eine Befehlswarnung handelt
#   #allArgs - die Befehlsargumente als eine Zeichenfolge, wenn es sich um eine Befehlswarnung handelt
#   #channel - Der Zielkanal für diese Warnmeldung
#   #jda - Die JDA-Instanz von DiscordSRV, die zur Kommunikation mit Discord verwendet wird
#
# Syntax/defaults:
#  - Trigger: <Event-Name or /command>
#    Async: true # Optional, Standardwert ist „true“, du solltest dies fast nie ändern müssen.
#    Conditions:
#      - Eigenschaft == < > <= >= Wert etc
#    Channel: <DiscordSRV-Kanalname>
#    IgnoreCancelled: true # nur für Event-Benachichtigungen
#    Content: ""
#    Webhook:
#      Enabled: false
#      AvatarUrl: "{botavatarurl}"
#      Name: "{botname}"
#    Embed:
#      Enabled: true
#      Color: "#00ff00" # akzeptiert einen Hexadezimal-Farbcode (z. B. „#ffffff“) oder eine RGB-Ganzzahl (z. B. 0)
#      Author:
#        ImageUrl: "{embedavatarurl}"
#        Name: "{username} hat ... getan"
#        Url: ""
#      ThumbnailUrl: ""
#      Title:
#        Text: ""
#        Url: ""
#      Description: ""
#      Fields: [] # Das Format lautet „Titel;Wert;inline“ (z. B. „Wer ist beigetreten?;%displayname%;true“) oder „blank“, um ein leeres Feld hinzuzufügen.
#      ImageUrl: ""
#      Footer:
#        Text: ""
#        IconUrl: ""
#      Timestamp: false # Auf „true“ setzen, um den Zeitpunkt zu verwenden, zu dem die Nachricht gesendet wurde, oder einen Epoch-Zeitstempel für einen bestimmten Zeitpunkt verwenden (https://www.epochconverter.com/)
#
Alerts:
  # Beispielkonfiguration zum Senden von Nachrichten an den DiscordSRV-Kanal „fish“, wenn ein Spieler erfolgreich einen Fisch gefangen hat
  #- Trigger: org.bukkit.event.player.PlayerFishEvent
  #  Channel: fish
  #  Conditions:
  #    - state.name() == 'CAUGHT_FISH'
  #  Embed:
  #    Color: "#00ff00"
  #    Author:
  #      ImageUrl: "{embedavatarurl}"
  #      Name: "{name} hat einen ${caught.itemStack.type.name()} gefangen!"

  # Beispielkonfiguration zum Senden von Matrix-Anti-Cheat-Nachrichten
  #- Trigger: me.rerere.matrix.api.events.PlayerViolationEvent
  #  Channel: matrix
  #  Conditions:
  #    - violations >= 5 # Sende keine Ereignisse für Spieler mit weniger als 5 Verstößen.
  #  Embed:
  #    Color: "#ff0000"
  #    Author:
  #      ImageUrl: "{embedavatarurl}"
  #      Name: "{username} hat die ${hackType.name().toLowerCase()} Prüfung nicht bestanden | ${component} | vl:${violations} Ping:${player.handle.ping} TPS:{tps}"

  # Beispielkonfiguration zum Senden von /gamemode-Nachrichten
  #- Trigger: /gamemode
  #  Channel: gamemode
  #  Conditions:
  #    - '#player.hasPermission("minecraft.command.gamemode") == true'
  #  Embed:
  #    Color: "#ff0000"
  #    Author:
  #      ImageUrl: "{embedavatarurl}"
  #      Name: "{username}s Spielmodus wurde auf ${#args.get(0)} gesetzt"

  # Beispielkonfiguration zum Senden von /me-Befehlen
  #- Trigger: /me
  #  Channel: me
  #  Conditions:
  #    - '#player.hasPermission("minecraft.command.me") == true || #player.hasPermission("essentials.me") == true'
  #  Embed:
  #    Color: "#00ff00"
  #    Author:
  #      ImageUrl: "{embedavatarurl}"
  #      Name: "* {username} ${#allArgs}"
