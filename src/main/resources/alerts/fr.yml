# Ceci est une fonctionnalité /avancée/ de DiscordSRV qui vous permet d'envoyer des messages à Discord lorsqu'un événement de jeu se produit
# ou lorsqu'une commande est exécutée. Vous aurez besoin d'une connaissance approfondie du fonctionnement des événements Bukkit et de leurs propriétés.
# Si vous n'êtes pas sûr de ce que vous faites ici, demandez peut-être à un développeur ou rejoignez notre serveur de support @ discordsrv.com/discord
# Made something you'd like to share? You can do so in our Discord server's #alerts forum (invite above)
#
# Référez-vous à la javadoc de l'API Bukkit pour trouver les événements et leurs propriétés :
#  https://hub.spigotmc.org/javadocs/bukkit
# Ressources utiles pour apprendre les expressions SpEL :
#  https://docs.spring.io/spring/docs/4.2.x/spring-framework-reference/html/expressions.html
#  https://dzone.com/articles/learn-spring-expression-language-with-examples
#
# Vous pouvez utiliser ces placeholders :
#  {tps} - TPS du serveur
#  {time} - heure formatée
#  {date} - date formatée
#  {name} - si l'alerte concerne un événement d'un joueur, le nom du joueur
#  {ping} - si l'alerte concerne un événement d'un joueur, le ping du joueur
#  {username} - si l'alerte concerne un événement d'un joueur, le nom d'utilisateur du joueur
#  {displayname} - si l'alerte concerne un événement d'un joueur, le nom d'affichage du joueur
#  {usernamenoescapes} - si l'alerte concerne un événement d'un joueur, le nom d'utilisateur du joueur sans échapper le formatage discord
#  {displaynamenoescapes} - si l'alerte concerne un événement d'un joueur, le nom d'affichage du joueur sans échapper le formatage discord
#  {world} - si l'alerte concerne un événement d'un joueur, le monde actuel du joueur
#  {embedavatarurl} - si l'alerte concerne un événement d'un joueur, l'URL de l'avatar du skin du joueur, sinon, l'URL de l'avatar du bot
#  {botavatarurl} - l'URL de l'avatar du bot
#  {botname} - le nom du bot
#  %placeholder% - n'importe quel PlaceholderAPI placeholders, vous pouvez seulement utiliser les placeholders qui nécessitent un joueur lors d'un événement d'un joueur
#
# Vous pouvez également utiliser les expressions SpEL avec ${expression...}, par exemple :
#  - Obtenir l'IP d'un joueur : ${#player.address.address.hostAddress}
#  - Obtenir le mode de jeu d'un joueur : ${#player.gameMode.name()}
#  - Obtenir l'ID du compte discord lié d'un joueur : ${#discordsrv.accountLinkManager.getDiscordId(#player.uniqueId)}
#  - Obtenir le nombre de joueurs connectés : ${#server.onlinePlayers.size()}
#  - Obtenir le statut de la connexion entre DiscordSRV et Discord : ${#jda.status.name()}
#  - Vérifier si un joueur est dans un monde : ${#player.world.name == 'world_the_end'}
#  - Vérifier s'il fait jour dans le monde où le joueur se trouve : ${#player.world.time > 0 && #player.world.time < 13000}
#  Vous pouvez utiliser les placeholders d'expression suivants, comme vu ci-dessus :
#   #plugins.<plugin> - l'instance du plugin spécifié, null si elle n'existe pas
#   #event - l'événement qui déclenche l'alerte si cette alerte est une alerte d'événement
#   #server - l'instance du serveur API Bukkit, équivalent à Bukkit#getServer
#   #discordsrv - l'instance du plugin DiscordSRV
#   #player - le joueur pour lequel l'événement a lieu, si c'est un événement de joueur ou une commande
#   #sender - l'expéditeur de la commande, si c'est une alerte de commande
#   #command - la commande complète, sans slash de début, si c'est une alerte de commande
#   #args - les arguments de la commande, si c'est une alerte de commande
#   #allArgs - les arguments de la commande en une seule chaîne, si c'est une alerte de commande
#   #channel - le canal de destination pour cette alerte
#   #jda - l'instance JDA de DiscordSRV qu'il utilise pour communiquer avec Discord
#
# Syntaxe/par défaut :
#  - Trigger: <nom de l'événement ou /commande>
#    Async: true # optionnel, par défaut à true, vous ne devriez presque jamais avoir à changer cela
#    Conditions:
#      - propriété == < > <= >= valeur etc
#    Channel: <nom du canal discordsrv>
#    IgnoreCancelled: true # seulement pour les alertes d'événement
#    Content: ""
#    Webhook:
#      Enabled: false
#      AvatarUrl: "{botavatarurl}"
#      Name: "{botname}"
#    Embed:
#      Enabled: true
#      Color: "#00ff00" # accepte un code couleur hex (par ex. "#ffffff") ou un entier rgb (par ex. 0)
#      Author:
#        ImageUrl: "{embedavatarurl}"
#        Name: "{username} a fait... quelque chose."
#        Url: ""
#      ThumbnailUrl: ""
#      Title:
#        Text: ""
#        Url: ""
#      Description: ""
#      Fields: [] # le format est "titre;valeur;inline" (par ex. "Qui a rejoint ?;%displayname%;true") ou "blank" pour ajouter un champ vide
#      ImageUrl: ""
#      Footer:
#        Text: ""
#        IconUrl: ""
#      Timestamp: false # mettre à true pour utiliser l'heure à laquelle le message a été envoyé ou utiliser un timestamp d'époque pour un moment spécifique (https://www.epochconverter.com/)
#
Alerts:
  # Exemple de configuration pour envoyer des messages au canal "fish" de DiscordSRV lorsqu'un joueur attrape un poisson avec succès
  #- Trigger: PlayerFishEvent
  #  Channel: fish
  #  Conditions:
  #    - state.name() == 'CAUGHT_FISH'
  #  Embed:
  #    Color: "#00ff00"
  #    Author:
  #      ImageUrl: "{embedavatarurl}"
  #      Name: "{name} a attrapé un ${caught.itemStack.type.name()}!"

  # Exemple de configuration pour envoyer des messages anti-triche Matrix
  #- Trigger: PlayerViolationEvent
  #  Channel: matrix
  #  Conditions:
  #    - violations >= 5 # ne pas envoyer d'événements pour les joueurs avec < 5 violations
  #  Embed:
  #    Color: "#ff0000"
  #    Author:
  #      ImageUrl: "{embedavatarurl}"
  #      Name: "{username} a échoué au contrôle ${hackType.name().toLowerCase()} | ${component} | vl:${violations} ping:${player.handle.ping} tps:{tps}"

  # Exemple de configuration pour envoyer des messages /gamemode
  #- Trigger: /gamemode
  #  Channel: gamemode
  #  Conditions:
  #    - '#player.hasPermission("minecraft.command.gamemode") == true'
  #  Embed:
  #    Color: "#ff0000"
  #    Author:
  #      ImageUrl: "{embedavatarurl}"
  #      Name: "{username} a changé de mode de jeu pour ${#args.get(0)}"

  # Exemple de configuration pour envoyer des commandes /me
  #- Trigger: /me
  #  Channel: me
  #  Conditions:
  #    - '#player.hasPermission("minecraft.command.me") == true || #player.hasPermission("essentials.me") == true'
  #  Embed:
  #    Color: "#00ff00"
  #    Author:
  #      ImageUrl: "{embedavatarurl}"
  #      Name: "* {username} ${#allArgs}"
